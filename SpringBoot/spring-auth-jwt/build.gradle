plugins {
    id 'org.springframework.boot' version '2.1.8.RELEASE' apply false
    id 'com.google.cloud.tools.jib' version '1.5.0' apply false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'com.google.cloud.tools.jib'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    ext {
        spockVersion = '1.3-groovy-2.5'
        springCloudVersion = 'Greenwich.SR3'
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter"
        implementation 'org.codehaus.groovy:groovy-all:2.5.7'
        testImplementation "org.spockframework:spock-core:$spockVersion"
        testImplementation "org.spockframework:spock-spring:$spockVersion"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        developmentOnly "org.springframework.boot:spring-boot-devtools"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    sourceCompatibility = '11'

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }


    jib.allowInsecureRegistries = true
    jib.to.image = "10.28.250.62:5000/tna/${project.name}"
    jib.from.image = 'gcr.io/distroless/java:11'
    jib.container.jvmFlags = ['-Duser.timezone=Europe/Warsaw', '-Dspring.devtools.restart.enabled=false']


    sourceSets {
        integrationTest {
            java
            groovy
            resources
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
    }

    configurations {
        integrationTestImplementation.extendsFrom testImplementation
        integrationTestRuntimeOnly.extendsFrom runtimeOnly
    }

    task integrationTest(type: Test) {
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
    }
}

allprojects {
    repositories {
        jcenter()
        mavenLocal()
        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }
    }

    group = 'com.example'
}


